name: Unified Release Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release Version (e.g., 1.0.0)'
        required: true
        default: '1.0.0'

env:
  CARGO_TERM_COLOR: always
  BUILD_VERSION: ${{ github.event.inputs.version }}

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          target: x86_64-pc-windows-gnu
      - name: Build Windows x64
        run: cargo build --release --target x86_64-pc-windows-gnu
      - name: Create Windows Unified Package
        run: |
          # Create unified package directory
          mkdir -p dist/ifm-ruta-windows-x64-${{ env.BUILD_VERSION }}
          
          # Copy binaries
          cp target/x86_64-pc-windows-gnu/release/ifm-ruta-mcp.exe dist/ifm-ruta-windows-x64-${{ env.BUILD_VERSION }}/
          cp target/x86_64-pc-windows-gnu/release/ifm-ruta-egui.exe dist/ifm-ruta-windows-x64-${{ env.BUILD_VERSION }}/
          cp README.md dist/ifm-ruta-windows-x64-${{ env.BUILD_VERSION }}/
          cp LICENSE dist/ifm-ruta-windows-x64-${{ env.BUILD_VERSION }}/
          
          # Create installation scripts
          cat << 'EOF' > dist/ifm-ruta-windows-x64-${{ env.BUILD_VERSION }}/install.bat
          @echo off
          echo Installing IFM-Ruta...
          echo.
          
          REM Create installation directory
          set INSTALL_DIR=%PROGRAMFILES%\ifm-ruta
          if not exist "%INSTALL_DIR%" mkdir "%INSTALL_DIR%"
          
          REM Copy files
          copy "ifm-ruta-mcp.exe" "%INSTALL_DIR%\"
          copy "ifm-ruta-egui.exe" "%INSTALL_DIR%\"
          copy "README.md" "%INSTALL_DIR%\"
          copy "LICENSE" "%INSTALL_DIR%\"
          
          REM Add to PATH
          echo Adding to PATH...
          setx PATH "%PATH%;%INSTALL_DIR%" /M
          
          echo.
          echo Installation complete!
          echo IFM-Ruta has been installed to: %INSTALL_DIR%
          echo.
          echo To use:
          echo   - MCP Server: ifm-ruta-mcp.exe
          echo   - GUI App: ifm-ruta-egui.exe
          echo.
          pause
          EOF
          
          cat << 'EOF' > dist/ifm-ruta-windows-x64-${{ env.BUILD_VERSION }}/uninstall.bat
          @echo off
          echo Uninstalling IFM-Ruta...
          echo.
          
          set INSTALL_DIR=%PROGRAMFILES%\ifm-ruta
          
          REM Remove files
          if exist "%INSTALL_DIR%" (
              rmdir /s /q "%INSTALL_DIR%"
              echo Removed installation directory: %INSTALL_DIR%
          )
          
          echo.
          echo Uninstallation complete!
          pause
          EOF
          
          # Create ZIP package
          cd dist
          7z a ifm-ruta-windows-x64-${{ env.BUILD_VERSION }}.zip ifm-ruta-windows-x64-${{ env.BUILD_VERSION }}/*
      - name: Upload Windows x64 Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ifm-ruta-windows-x64-${{ env.BUILD_VERSION }}
          path: dist/ifm-ruta-windows-x64-${{ env.BUILD_VERSION }}.zip

  build-fedora:
    runs-on: ubuntu-latest
    container: fedora:latest
    steps:
      - uses: actions/checkout@v4
      - name: Install build dependencies
        run: |
          dnf update -y
          dnf install -y rust cargo gcc
      - name: Build Fedora x64
        run: cargo build --release --target x86_64-unknown-linux-gnu
      - name: Create Fedora Unified Package
        run: |
          # Create unified package directory
          mkdir -p dist/ifm-ruta-fedora-x86_64-${{ env.BUILD_VERSION }}
          
          # Copy binaries
          cp target/x86_64-unknown-linux-gnu/release/ifm-ruta-mcp dist/ifm-ruta-fedora-x86_64-${{ env.BUILD_VERSION }}/
          cp target/x86_64-unknown-linux-gnu/release/ifm-ruta-egui dist/ifm-ruta-fedora-x86_64-${{ env.BUILD_VERSION }}/
          cp README.md dist/ifm-ruta-fedora-x86_64-${{ env.BUILD_VERSION }}/
          cp LICENSE dist/ifm-ruta-fedora-x86_64-${{ env.BUILD_VERSION }}/
          
          # Create installation scripts
          cat << 'EOF' > dist/ifm-ruta-fedora-x86_64-${{ env.BUILD_VERSION }}/install.sh
          #!/bin/bash
          
          echo "Installing IFM-Ruta..."
          
          # Create installation directory
          INSTALL_DIR="/opt/ifm-ruta"
          sudo mkdir -p "$INSTALL_DIR"
          
          # Copy files
          sudo cp ifm-ruta-mcp "$INSTALL_DIR/"
          sudo cp ifm-ruta-egui "$INSTALL_DIR/"
          sudo cp README.md "$INSTALL_DIR/"
          sudo cp LICENSE "$INSTALL_DIR/"
          
          # Make executable
          sudo chmod +x "$INSTALL_DIR/ifm-ruta-mcp"
          sudo chmod +x "$INSTALL_DIR/ifm-ruta-egui"
          
          # Create symlinks in /usr/bin
          sudo ln -sf "$INSTALL_DIR/ifm-ruta-mcp" /usr/bin/ifm-ruta-mcp
          sudo ln -sf "$INSTALL_DIR/ifm-ruta-egui" /usr/bin/ifm-ruta-egui
          
          # Create desktop file
          sudo tee /usr/share/applications/ifm-ruta-egui.desktop > /dev/null << 'DESKTOP_EOF'
          [Desktop Entry]
          Version=1.0
          Type=Application
          Name=IFM-Ruta GUI
          Comment=Interactive Feedback MCP GUI
          Exec=ifm-ruta-egui
          Icon=applications-development
          Terminal=false
          Categories=Development;
          DESKTOP_EOF
          
          echo "Installation complete!"
          echo "IFM-Ruta has been installed to: $INSTALL_DIR"
          echo ""
          echo "To use:"
          echo "  - MCP Server: ifm-ruta-mcp"
          echo "  - GUI App: ifm-ruta-egui"
          EOF
          
          cat << 'EOF' > dist/ifm-ruta-fedora-x86_64-${{ env.BUILD_VERSION }}/uninstall.sh
          #!/bin/bash
          
          echo "Uninstalling IFM-Ruta..."
          
          # Remove symlinks
          sudo rm -f /usr/bin/ifm-ruta-mcp
          sudo rm -f /usr/bin/ifm-ruta-egui
          
          # Remove desktop file
          sudo rm -f /usr/share/applications/ifm-ruta-egui.desktop
          
          # Remove installation directory
          sudo rm -rf /opt/ifm-ruta
          
          echo "Uninstallation complete!"
          EOF
          
          chmod +x dist/ifm-ruta-fedora-x86_64-${{ env.BUILD_VERSION }}/install.sh
          chmod +x dist/ifm-ruta-fedora-x86_64-${{ env.BUILD_VERSION }}/uninstall.sh
          
          # Create TAR package
          cd dist
          tar -czf ifm-ruta-fedora-x86_64-${{ env.BUILD_VERSION }}.tar.gz ifm-ruta-fedora-x86_64-${{ env.BUILD_VERSION }}/*
      - name: Upload Fedora x64 Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ifm-ruta-fedora-x86_64-${{ env.BUILD_VERSION }}
          path: dist/ifm-ruta-fedora-x86_64-${{ env.BUILD_VERSION }}.tar.gz
